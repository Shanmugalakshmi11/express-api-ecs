name: example-workflow

on: workflow_dispatch

jobs:
  copy: # kopiert den Repository Inhalt auf den Runner
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: ls
      run: |
        ls
  checkout:
    # lint (check for syntax)
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        uses: actions/checkout@v2
    
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.0'
    
      - name: Install Dependencies
        run: npm i
    
      - name: Run ESLint
        run: npm run lint
  # image-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #   # Code Kopieren
  #   - name: checkout
  #     uses: actions/checkout@v4
  #   # Bei AWS Authentifizieren
  #   - name: Configure AWS Credentials 2
  #     uses: aws-actions/configure-aws-credentials@v4
  #     with:
  #       aws-region: eu-central-1
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #   # Einloggen bei ECR
  #   - name: Login to Amazon ECR
  #     uses: aws-actions/amazon-ecr-login@v2
  #   # TODO: Docker Image bauen und pushen
  #   - name: Docker build, tag, push
  #     run: |
  #       aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 243411915368.dkr.ecr.eu-central-1.amazonaws.com
  #       docker build -t express-api-test .
  #       docker tag express-api-test:latest 243411915368.dkr.ecr.eu-central-1.amazonaws.com/express-api-test:latest
  #       docker push 243411915368.dkr.ecr.eu-central-1.amazonaws.com/express-api-test:latest
